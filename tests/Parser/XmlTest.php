<?php

namespace Camoo\Config\Test\Parser;

use Camoo\Config\Enum\Parser;
use Camoo\Config\Parser\Xml;
use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-04-21 at 22:37:22.
 */
class XmlTest extends TestCase
{
    /** @var Xml */
    protected $xml;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->xml = new Xml();
    }

    /** @covers \Camoo\Config\Parser\Xml::getSupportedExtensions() */
    public function testGetSupportedExtensions()
    {
        $expected = [Parser::XML];
        $actual = $this->xml->getSupportedExtensions();
        $this->assertSame($expected, $actual);
    }

    /**
     * @covers \Camoo\Config\Parser\Xml::parseFile()
     * @covers \Camoo\Config\Parser\Xml::parse()
     */
    public function testLoadInvalidXml()
    {
        $this->expectException(\Camoo\Config\Exception\ParseException::class);
        $this->expectExceptionMessage('Opening and ending tag mismatch: name line 4');
        $this->xml->parseFile(__DIR__ . '/../mocks/fail/error.xml');
    }

    /**
     * @covers \Camoo\Config\Parser\Xml::parseFile()
     * @covers \Camoo\Config\Parser\Xml::parseString()
     * @covers \Camoo\Config\Parser\Xml::parse()
     */
    public function testLoadXml()
    {
        $file = $this->xml->parseFile(__DIR__ . '/../mocks/pass/config.xml');
        $string = $this->xml->parseString(file_get_contents(__DIR__ . '/../mocks/pass/config.xml'));

        $this->assertSame('localhost', $file['host']);
        $this->assertSame('80', $file['port']);

        $this->assertSame('localhost', $string['host']);
        $this->assertSame('80', $string['port']);
    }
}
